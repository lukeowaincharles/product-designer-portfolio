{"version":3,"sources":["assets/images/pwc.svg","assets/images/barclays.svg","assets/images/nesta.svg","assets/images/appsmith.svg","assets/images/equiniti.svg","assets/images/thriva.svg","assets/images/rideshur.svg","assets/images/attest.svg","components/sections/Body.js","components/sections/Clients.js","components/sections/Contact.js","components/sections/Header.js","components/utils/WindowWidth.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Body","BODYDATA","BodyData","title","bodyCopy","Clients","skills","id","name","src","Barclays","Appsmith","Thriva","Pwc","Equiniti","Nesta","Rideshur","Attest","className","map","item","index","key","toLowerCase","alt","width","height","Contact","CONTACTDATA","ContactData","href","email","target","rel","mobile","Header","HEADERDATA","HeaderData","subText","useWindowWidth","useState","window","innerWidth","setWidth","useEffect","handleResize","addEventListener","removeEventListener","App","isWebpSupported","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90878d2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pwc.e9b4595b.svg\";","module.exports = __webpack_public_path__ + \"static/media/barclays.918e382f.svg\";","module.exports = __webpack_public_path__ + \"static/media/nesta.fd7843a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/appsmith.310734be.svg\";","module.exports = __webpack_public_path__ + \"static/media/equiniti.9e1cc8c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/thriva.67741368.svg\";","module.exports = __webpack_public_path__ + \"static/media/rideshur.43d8376b.svg\";","module.exports = __webpack_public_path__ + \"static/media/attest.c4888880.svg\";","import React from \"react\";\nimport BodyData from \"../../data/BodyData.json\";\n\nfunction Body() {\n  const BODYDATA = BodyData;\n\n  return (\n    <section>\n      <h1>{BODYDATA[0].title}</h1>\n      <p>{BODYDATA[0].bodyCopy}</p>\n    </section>\n  );\n}\n\nexport default Body;\n","import React from \"react\";\nimport Pwc from \"../../assets/images/pwc.svg\";\nimport Barclays from \"../../assets/images/barclays.svg\";\nimport Nesta from \"../../assets/images/nesta.svg\";\nimport Appsmith from \"../../assets/images/appsmith.svg\";\nimport Equiniti from \"../../assets/images/equiniti.svg\";\nimport Thriva from \"../../assets/images/thriva.svg\";\nimport Rideshur from \"../../assets/images/rideshur.svg\";\nimport Attest from \"../../assets/images/attest.svg\";\n\nfunction Clients() {\n  const skills = [\n    { id: 1, name: \"Barclays\", src: Barclays },\n    { id: 2, name: \"Appsmith\", src: Appsmith },\n    { id: 3, name: \"Thriva\", src: Thriva },\n    { id: 4, name: \"PWC\", src: Pwc },\n    { id: 5, name: \"Equiniti\", src: Equiniti },\n    { id: 6, name: \"Nesta\", src: Nesta },\n    { id: 7, name: \"Rideshur\", src: Rideshur },\n    { id: 8, name: \"Attest\", src: Attest },\n  ];\n\n  return (\n    <section>\n      <h2 className=\"text text--pink\">Who I've worked with</h2>\n      <ul className=\"client-image-list\">\n        {skills.map((item, index) => (\n          <li\n            className=\"client-image-list__item\"\n            key={index}\n            id={`${\"client__\"}${item.name.toLowerCase()}`}\n          >\n            <img\n              alt={`${\"Logo of\"} ${item.name}`}\n              src={item.src}\n              width=\"120\"\n              height=\"100%\"\n            />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default Clients;\n","import React from \"react\";\nimport ContactData from \"../../data/ContactData.json\";\n\nfunction Contact() {\n  const CONTACTDATA = ContactData;\n\n  return (\n    <section className=\"contact\">\n      <h2 className=\"text text--pink\">{CONTACTDATA[0].title}</h2>\n      <ul>\n        <li className=\"contact__list-item\">\n          <a\n            className=\"contact__email contact__link\"\n            href={`mailto:${CONTACTDATA[0].email}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {CONTACTDATA[0].email}\n          </a>\n        </li>\n        <li className=\"contact__list-item\">\n          <a\n            className=\"contact__mobile contact__link\"\n            href={`tel:${CONTACTDATA[0].mobile}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {CONTACTDATA[0].mobile}\n          </a>\n        </li>\n      </ul>\n    </section>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport HeaderData from \"../../data/HeaderData.json\";\n\nfunction Header() {\n  const HEADERDATA = HeaderData;\n\n  return (\n    <header className=\"header\">\n      <p className=\"h2 header__title text text--pink\">\n        {HEADERDATA[0].name}\n        <span className=\"divider\"></span>\n        {HEADERDATA[0].subText}\n      </p>\n    </header>\n  );\n}\n\nexport default Header;\n","import { useState, useEffect } from \"react\";\n\nfunction useWindowWidth() {\n  const [width, setWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => setWidth(window.innerWidth);\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  return width;\n}\n\nexport default useWindowWidth;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Body from \"./components/sections/Body\";\nimport Clients from \"./components/sections/Clients\";\nimport Contact from \"./components/sections/Contact\";\nimport Header from \"./components/sections/Header\";\n// import LizzieB from \"../src/assets/images/liz-portrait.jpg\";\n// import LizzieBwebp from \"../src/assets/images/liz-portrait.webp\";\n// import Webp from \"./components/utils/Webp\";\nimport { isWebpSupported } from \"react-image-webp/dist/utils\";\nimport useWindowWidth from \"./components/utils/WindowWidth\";\n\nfunction App() {\n  const width = useWindowWidth();\n\n  return (\n    <div className=\"App\">\n      <main>\n        {width <= 768 && (\n          <div className=\"portrait\">\n            <div\n              className={`${\"portrait__background\"} ${\n                isWebpSupported\n                  ? \"portrait__background--webp\"\n                  : \"portrait__background--jpg\"\n              }`}\n            >\n              <span className=\"visually-hidden\">\n                Portrait of Liz Hamburger - Product Designer\n              </span>\n            </div>\n          </div>\n        )}\n\n        <article className=\"main-content\">\n          <Header />\n          <Body />\n          <Clients />\n          <Contact />\n        </article>\n\n        {width >= 768 && (\n          <div className=\"content\">\n            <div className=\"portrait\">\n              <div\n                className={`${\"portrait__background\"} ${\n                  isWebpSupported\n                    ? \"portrait__background--webp\"\n                    : \"portrait__background--jpg\"\n                }`}\n              >\n                <span className=\"visually-hidden\">\n                  Portrait of Liz Hamburger - Product Designer\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}